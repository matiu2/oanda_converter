use ; use ; use use parse_display :: Display ; # [doc = " Whether to use the dev or live hosts"] # [doc = " See: <https://developer.oanda.com/rest-live-v20/development-guide/>"] # [derive (Debug , Clone , Copy , Display)] pub enum Host { Dev , Live , } impl Host { # [doc = " Returns the API endpoint for the REST API"] # [doc = " See: <https://developer.oanda.com/rest-live-v20/development-guide/>"] pub fn rest (& self) -> & 'static str { match self { Host :: Dev => "api-fxpractice.oanda.com" , Host :: Live => "api-fxtrade.oanda.com" , } } # [doc = " Returns the streaming API"] # [doc = " See: <https://developer.oanda.com/rest-live-v20/development-guide/>"] pub fn streaming (& self) -> & 'static str { match self { Host :: Dev => "stream-fxpractice.oanda.com" , Host :: Live => "stream-fxtrade.oanda.com" , } } # [doc = " Generates a URL using the current host, `https` and your `path`"] pub fn rest_url (& self , path : impl std :: fmt :: Display) -> String { format ! ("https://{}{path}" , self . rest ()) } }