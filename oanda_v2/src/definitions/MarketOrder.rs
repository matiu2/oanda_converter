use serde :: { Serialize , Deserialize } ; _blank_ ! () ; # [derive (Serialize , Deserialize)] struct MarketOrder { # [doc = " The Order’s identifier, unique within the Order’s Account."] id : Option < OrderID > , # [doc = " The time when the Order was created."] createTime : Option < DateTime > , # [doc = " The current state of the Order."] state : Option < OrderState > , # [doc = " The client extensions of the Order. Do not set, modify, or delete clientExtensions if your account is associated with MT4."] clientExtensions : Option < ClientExtensions > , # [doc = " The type of the Order. Always set to “MARKET” for Market Orders."] # [serde (default = "MARKET")] type : OrderType , # [doc = " The Market Order’s Instrument."] instrument : InstrumentName , # [doc = " The quantity requested to be filled by the Market Order. A positive number of units results in a long Order, and a negative number of units results in a short Order."] units : DecimalNumber , # [doc = " The time-in-force requested for the Market Order. Restricted to FOK or IOC for a MarketOrder."] # [serde (default = "FOK")] timeInForce : TimeInForce , # [doc = " The worst price that the client is willing to have the Market Order filled at."] priceBound : Option < PriceValue > , # [doc = " Specification of how Positions in the Account are modified when the Order is filled."] # [serde (default = "DEFAULT")] positionFill : OrderPositionFill , # [doc = " Details of the Trade requested to be closed, only provided when the Market Order is being used to explicitly close a Trade."] tradeClose : Option < MarketOrderTradeClose > , # [doc = " Details of the long Position requested to be closed out, only provided when a Market Order is being used to explicitly closeout a long Position."] longPositionCloseout : Option < MarketOrderPositionCloseout > , # [doc = " Details of the short Position requested to be closed out, only provided when a Market Order is being used to explicitly closeout a short Position."] shortPositionCloseout : Option < MarketOrderPositionCloseout > , # [doc = " Details of the Margin Closeout that this Market Order was created for"] marginCloseout : Option < MarketOrderMarginCloseout > , # [doc = " Details of the delayed Trade close that this Market Order was created for"] delayedTradeClose : Option < MarketOrderDelayedTradeClose > , # [doc = " TakeProfitDetails specifies the details of a Take Profit Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Take Profit, or when a Trade’s dependent Take Profit Order is modified directly through the Trade."] takeProfitOnFill : Option < TakeProfitDetails > , # [doc = " StopLossDetails specifies the details of a Stop Loss Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Stop Loss, or when a Trade’s dependent Stop Loss Order is modified directly through the Trade."] stopLossOnFill : Option < StopLossDetails > , # [doc = " GuaranteedStopLossDetails specifies the details of a Guaranteed Stop Loss Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Guaranteed Stop Loss, or when a Trade’s dependent Guaranteed Stop Loss Order is modified directly through the Trade."] guaranteedStopLossOnFill : Option < GuaranteedStopLossDetails > , # [doc = " TrailingStopLossDetails specifies the details of a Trailing Stop Loss Order to be created on behalf of a client. This may happen when an Order is filled that opens a Trade requiring a Trailing Stop Loss, or when a Trade’s dependent Trailing Stop Loss Order is modified directly through the Trade."] trailingStopLossOnFill : Option < TrailingStopLossDetails > , # [doc = " Client Extensions to add to the Trade created when the Order is filled (if such a Trade is created). Do not set, modify, or delete tradeClientExtensions if your account is associated with MT4."] tradeClientExtensions : Option < ClientExtensions > , # [doc = " ID of the Transaction that filled this Order (only provided when the Order’s state is FILLED)"] fillingTransactionID : Option < TransactionID > , # [doc = " Date/time when the Order was filled (only provided when the Order’s state is FILLED)"] filledTime : Option < DateTime > , # [doc = " Trade ID of Trade opened when the Order was filled (only provided when the Order’s state is FILLED and a Trade was opened as a result of the fill)"] tradeOpenedID : Option < TradeID > , # [doc = " Trade ID of Trade reduced when the Order was filled (only provided when the Order’s state is FILLED and a Trade was reduced as a result of the fill)"] tradeReducedID : Option < TradeID > , # [doc = " Trade IDs of Trades closed when the Order was filled (only provided when the Order’s state is FILLED and one or more Trades were closed as a result of the fill)"] tradeClosedIDs : Vec < TradeID > , # [doc = " ID of the Transaction that cancelled the Order (only provided when the Order’s state is CANCELLED)"] cancellingTransactionID : Option < TransactionID > , # [doc = " Date/time when the Order was cancelled (only provided when the state of the Order is CANCELLED)"] cancelledTime : Option < DateTime > , }