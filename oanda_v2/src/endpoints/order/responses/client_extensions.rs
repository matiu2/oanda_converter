use lib :: endpoints :: trade :: responses :: client_extensions ; ; use lib :: endpoints :: trade :: responses :: client_extensions ; use serde :: { Serialize , Deserialize } ; # [doc = " The Orderâ€™s Client Extensions were successfully modified"] # [derive (Serialize , Deserialize)] struct ClientExtensions200 { # [doc = " The Transaction that modified the Client Extensions for"] # [doc = " the Order"] order_client_extensions_modify_transaction : Option < OrderClientExtensionsModifyTransaction , > , # [doc = " The ID of the most recent Transaction created for the"] # [doc = " Account"] last_transaction_id : Option < TransactionID > , # [doc = " The IDs of all Transactions that were created while"] # [doc = " satisfying the request."] related_transaction_i_ds : Vec < TransactionID > , } # [derive (Serialize , Deserialize)] struct ClientExtensions400 { # [doc = " The Transaction that rejected the modification of the Client"] # [doc = " Extensions for the Order"] order_client_extensions_modify_reject_transaction : Option < OrderClientExtensionsModifyRejectTransaction , > , # [doc = " The ID of the most recent Transaction created for the"] # [doc = " Account"] last_transaction_id : Option < TransactionID > , # [doc = " The IDs of all Transactions that were created while"] # [doc = " satisfying the request."] related_transaction_i_ds : Vec < TransactionID > , # [doc = " The code of the error that has occurred. This field may not"] # [doc = " be returned for some errors."] error_code : Option < string > , # [doc = " The human-readable description of the error that has"] # [doc = " occurred."] error_message : string , } # [derive (Serialize , Deserialize)] struct ClientExtensions404 { # [doc = " The Transaction that rejected the modification of the"] # [doc = " Client Extensions for the Order. Only present if the Account"] # [doc = " exists."] order_client_extensions_modify_reject_transaction : Option < OrderClientExtensionsModifyRejectTransaction , > , # [doc = " The ID of the most recent Transaction created for the"] # [doc = " Account. Only present if the Account exists."] last_transaction_id : Option < TransactionID > , # [doc = " The IDs of all Transactions that were created while"] # [doc = " satisfying the request. Only present if the Account exists."] related_transaction_i_ds : Vec < TransactionID > , # [doc = " The code of the error that has occurred. This field may not"] # [doc = " be returned for some errors."] error_code : Option < string > , # [doc = " The human-readable description of the error that has"] # [doc = " occurred."] error_message : string , } # [derive (Debug)] pub enum Error { E400 (ClientExtensions400) , E404 (ClientExtensions404) , }